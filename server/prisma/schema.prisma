// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  login        String        @unique
  password     String
  pets         Pet[]
  appointments Appointment[]
  receipts     Receipt[]
}


model Pet {
  id             Int           @id @default(autoincrement())
  name           String
  species        String
  user           User          @relation(fields: [userId], references: [id])
  userId         Int
  appointments   Appointment[]
}

model Doctor {
  id           Int           @id @default(autoincrement())
  login        String        @unique
  password     String
  appointments Appointment[]
  services     Service[]
  receipts     Receipt[]
}

model Appointment {
  id        Int      @id @default(autoincrement())
  date      DateTime
  notes     String?

  // Relations
  user      User     @relation(fields: [userId], references: [id])
  userId    Int

  pet       Pet      @relation(fields: [petId], references: [id])
  petId     Int

  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  doctorId  Int
}


model Receipt {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  doctorId  Int
  amount    Float
  date      DateTime
}

model Service {
  id        Int      @id @default(autoincrement())
  name      String
  price     Float
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  doctorId  Int
}

model Admin {
  id       Int    @id @default(autoincrement())
  login    String @unique
  password String
}
